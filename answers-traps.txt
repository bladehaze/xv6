- Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?
a2


- Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.)
Only see the result of 11 saved to a1. compiler optimization.

- At what address is the function printf located?

Which calculated as  30(HEX) + 1528(DEC) = 628(DEC)

which is first command in printf.
 628:	711d                	addi	sp,sp,-96

- What value is in the register ra just after the jalr to printf in main?

30(HEX)

- Run the following code.

	unsigned int i = 0x00646c72;
	printf("H%x Wo%s", 57616, &i);
      
What is the output? Here's an ASCII table that maps bytes to characters.
The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set i to in order to yield the same output? Would you need to change 57616 to a different value?

Here's a description of little- and big-endian and a more whimsical description.


0x00646c72 in binary form and 
01100100 01101100 01110010 : from high to low memory address.
-> to decimal for each byte.
100 108 114
-> to char by ASCII table.
d l r

which is "rld" in string.

The result is 
HE110 World

Swap first and last char
01110010 01101100 01100100
in decimal 
7498852
or in hex
726C64

- In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?

	printf("x=%d y=%d", 3);
      